name: Release

on:
  push:
    tags:
      - v*
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g. 1.0.0)'
        required: true
        type: string

permissions:
  contents: write
  packages: write

jobs:
  build-binaries:
    name: Build Binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            build_deb: true
    outputs:
      sha256_x86_64-apple-darwin: ${{ steps.calculate-sha.outputs.sha256_x86_64-apple-darwin }}
      sha256_aarch64-apple-darwin: ${{ steps.calculate-sha.outputs.sha256_aarch64-apple-darwin }}
      sha256_x86_64-unknown-linux-gnu: ${{ steps.calculate-sha.outputs.sha256_x86_64-unknown-linux-gnu }}

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}
      - name: Install cargo-deb
        run: if [[ "${{ matrix.build_deb }}" == "true" ]]; then cargo install cargo-deb; fi
      - name: Build
        run: |
          if [[ "${{ matrix.build_deb }}" == "true" ]]; then
            cargo deb
          else
            cargo build --release --target ${{ matrix.target }}
          fi
      - name: Create tarball and calculate SHA256
        id: calculate-sha
        run: |
          if [[ "${{ matrix.build_deb }}" != "true" ]]; then
            mkdir -p temp_bin
            cp target/${{ matrix.target }}/release/gitnapped temp_bin/
            tar -czf gitnapped-${{ matrix.target }}.tar.gz -C temp_bin gitnapped
            if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
              sha256sum gitnapped-${{ matrix.target }}.tar.gz > gitnapped-${{ matrix.target }}.tar.gz.sha256
            else
              shasum -a 256 gitnapped-${{ matrix.target }}.tar.gz > gitnapped-${{ matrix.target }}.tar.gz.sha256
            fi
            sha=$(cat gitnapped-${{ matrix.target }}.tar.gz.sha256 | awk '{print $1}')
          else
            sha256sum target/debian/*.deb > gitnapped-${{ matrix.target }}.deb.sha256
            sha=$(cat gitnapped-${{ matrix.target }}.deb.sha256 | awk '{print $1}')
          fi
          echo "sha256_${{ matrix.target }}=$sha" >> $GITHUB_ENV
          echo "sha256_${{ matrix.target }}=$sha" >> $GITHUB_OUTPUT
          rm -rf temp_bin
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: gitnapped-${{ matrix.target }}
          path: |
            if [[ "${{ matrix.build_deb }}" != "true" ]]; then
              gitnapped-${{ matrix.target }}.tar.gz
              gitnapped-${{ matrix.target }}.tar.gz.sha256
            else
              target/debian/*.deb
              gitnapped-${{ matrix.target }}.deb.sha256
            fi

  create-release:
    name: Create GitHub Release
    needs: [build-binaries]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version || github.ref_name }}
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 